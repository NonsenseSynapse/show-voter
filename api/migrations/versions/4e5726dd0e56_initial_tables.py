"""initial tables

Revision ID: 4e5726dd0e56
Revises:
Create Date: 2025-09-07 15:00:33.819934

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "4e5726dd0e56"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "show",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("current_poll_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_show_id"), "show", ["id"], unique=False)
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("password", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_id"), "user", ["id"], unique=False)
    op.create_table(
        "poll",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("order", sa.Integer(), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("show_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["show_id"],
            ["show.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_poll_id"), "poll", ["id"], unique=False)
    op.create_table(
        "poll_option",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("date_updated", sa.DateTime(), nullable=True),
        sa.Column("poll_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["poll_id"],
            ["poll.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_poll_option_id"), "poll_option", ["id"], unique=False)
    op.create_table(
        "poll_vote",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=True),
        sa.Column("poll_id", sa.Integer(), nullable=True),
        sa.Column("poll_option_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["poll_id"],
            ["poll.id"],
        ),
        sa.ForeignKeyConstraint(
            ["poll_option_id"],
            ["poll_option.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_poll_vote_id"), "poll_vote", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_poll_vote_id"), table_name="poll_vote")
    op.drop_table("poll_vote")
    op.drop_index(op.f("ix_poll_option_id"), table_name="poll_option")
    op.drop_table("poll_option")
    op.drop_index(op.f("ix_poll_id"), table_name="poll")
    op.drop_table("poll")
    op.drop_index(op.f("ix_user_id"), table_name="user")
    op.drop_table("user")
    op.drop_index(op.f("ix_show_id"), table_name="show")
    op.drop_table("show")
    # ### end Alembic commands ###
